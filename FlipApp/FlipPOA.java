package FlipApp;


/**
* FlipApp/FlipPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Flip.idl
* Sunday, April 22, 2018 10:22:44 PM CDT
*/

public abstract class FlipPOA extends org.omg.PortableServer.Servant
 implements FlipApp.FlipOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("current_game", new java.lang.Integer (0));
    _methods.put ("current_banker", new java.lang.Integer (1));
    _methods.put ("add_banker", new java.lang.Integer (2));
    _methods.put ("join_game", new java.lang.Integer (3));
    _methods.put ("check_time", new java.lang.Integer (4));
    _methods.put ("start_game", new java.lang.Integer (5));
    _methods.put ("current_gameusers", new java.lang.Integer (6));
    _methods.put ("return_banker", new java.lang.Integer (7));
    _methods.put ("current_bet", new java.lang.Integer (8));
    _methods.put ("banker_leave", new java.lang.Integer (9));
    _methods.put ("send_hash", new java.lang.Integer (10));
    _methods.put ("win_amount", new java.lang.Integer (11));
    _methods.put ("receive_winner", new java.lang.Integer (12));
    _methods.put ("get_logs", new java.lang.Integer (13));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // FlipApp/Flip/current_game
       {
         String $result = null;
         $result = this.current_game ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // FlipApp/Flip/current_banker
       {
         String account = in.read_string ();
         boolean $result = false;
         $result = this.current_banker (account);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // FlipApp/Flip/add_banker
       {
         String account = in.read_string ();
         this.add_banker (account);
         out = $rh.createReply();
         break;
       }

       case 3:  // FlipApp/Flip/join_game
       {
         String account = in.read_string ();
         int secretNum = in.read_long ();
         String $result = null;
         $result = this.join_game (account, secretNum);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // FlipApp/Flip/check_time
       {
         double $result = (double)0;
         $result = this.check_time ();
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 5:  // FlipApp/Flip/start_game
       {
         String bet_amount = in.read_string ();
         int duration = in.read_long ();
         this.start_game (bet_amount, duration);
         out = $rh.createReply();
         break;
       }

       case 6:  // FlipApp/Flip/current_gameusers
       {
         String $result = null;
         $result = this.current_gameusers ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // FlipApp/Flip/return_banker
       {
         String $result = null;
         $result = this.return_banker ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // FlipApp/Flip/current_bet
       {
         String $result = null;
         $result = this.current_bet ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // FlipApp/Flip/banker_leave
       {
         this.banker_leave ();
         out = $rh.createReply();
         break;
       }

       case 10:  // FlipApp/Flip/send_hash
       {
         String hash = in.read_string ();
         this.send_hash (hash);
         out = $rh.createReply();
         break;
       }

       case 11:  // FlipApp/Flip/win_amount
       {
         String $result = null;
         $result = this.win_amount ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 12:  // FlipApp/Flip/receive_winner
       {
         String $result = null;
         $result = this.receive_winner ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 13:  // FlipApp/Flip/get_logs
       {
         String $result = null;
         $result = this.get_logs ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FlipApp/Flip:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Flip _this() 
  {
    return FlipHelper.narrow(
    super._this_object());
  }

  public Flip _this(org.omg.CORBA.ORB orb) 
  {
    return FlipHelper.narrow(
    super._this_object(orb));
  }


} // class FlipPOA
